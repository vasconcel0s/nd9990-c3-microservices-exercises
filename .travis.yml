language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  # - docker build -t simple-node --build-arg FAVORITE_FOOD=${FAVORITE_FOOD} ./lesson-3-independent-releases/exercises/travis_env_var_exercise
  # - docker tag simple-node vasconcel0s/simple-node:$TRAVIS_BUILD_NUMBER
  - docker build -t reverseproxy ./project/udagram-reverseproxy
  - docker tag reverseproxy vasconcel0s/reverseproxy:$TRAVIS_BUILD_NUMBER
  - echo "it's going to deal with udagram-api-user"
  - docker build -t udagram-api-user ./project/udagram-api-user
  - docker tag udagram-api-user vasconcel0s/udagram-api-user:$TRAVIS_BUILD_NUMBER
  - echo "it's going to deal with udagram-api-feed"
  - docker build -t udagram-api-feed ./project/udagram-api-feed
  - docker tag udagram-api-feed vasconcel0s/udagram-api-feed:$TRAVIS_BUILD_NUMBER
  - echo "it's going to deal with udagram-frontend"
  - docker build -t udagram-frontend ./project/udagram-frontend
  - docker tag udagram-frontend vasconcel0s/udagram-frontend:$TRAVIS_BUILD_NUMBER

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - echo docker push vasconcel0s/reverseproxy:$TRAVIS_BUILD_NUMBER
  - docker push vasconcel0s/reverseproxy:$TRAVIS_BUILD_NUMBER
  - docker push vasconcel0s/udagram-api-user:$TRAVIS_BUILD_NUMBER
  - docker push vasconcel0s/udagram-api-feed:$TRAVIS_BUILD_NUMBER
  - docker push vasconcel0s/udagram-frontend:$TRAVIS_BUILD_NUMBER